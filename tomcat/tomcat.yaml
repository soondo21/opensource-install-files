---
apiVersion: v1
kind: Service
metadata:
  name: tomcat
  namespace: tomcat
  labels:
    app: tomcat
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  - name: https
    port: 8443
    targetPort: 8443
  selector:
    app: tomcat
  type: ClusterIP 
---
apiVersion: v1
kind: Service
metadata:
  name: tomcat-health
  namespace: tomcat
  labels:
    app: tomcat
spec:
  ports:
  - name: health 
    port: 8100
    targetPort: 8100
  selector:
    app: tomcat
  type: ClusterIP 
---
apiVersion: v1
kind: Service
metadata:
  name: tomcat-metrics
  namespace: tomcat
  labels:
    app: tomcat
spec:
  ports:
  - name: metrics 
    port: 8088
    targetPort: 8088
  selector:
    app: tomcat
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tomcat
  namespace: tomcat
  labels:
    app: tomcat
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '8088'
spec:
  replicas: 2 
  selector:
    matchLabels:
      app: tomcat
  template:
    metadata:
      labels:
        app: tomcat
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - k8s-worker3
      volumes:
       - name: tomcat-local-pv
         persistentVolumeClaim:
           claimName: tomcat-local-pvc
       - name: tomcat-local-pv-logs
         persistentVolumeClaim:
           claimName: tomcat-local-pvc-logs
#       - name: tomcat-local-pv-lib
#         persistentVolumeClaim:
#           claimName: tomcat-local-pvc-lib
       - name: tomcat-server
         configMap:
           name: tomcat-server
       - name: tomcat-logging
         configMap:
           name: tomcat-logging
       - name: tomcat-context
         configMap:
           name: tomcat-context
      containers:
      - name: tomcat
        image: tmaxsoftofficial/hyperframeoe-tomcat:latest
        env:
        - name: TZ
          value: Asia/Seoul
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: JAVA_OPTS
          value: "-Xms256m -Xmx512m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=256m -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:+PrintHeapAtGC -XX:+HeapDumpOnOutOfMemoryError -Xloggc:/usr/local/tomcat/logs/${MY_POD_NAME}/tomcat_gc.log -XX:HeapDumpPath=/usr/local/tomcat/logs/${MY_POD_NAME}/ -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=200m -Dpodname=${MY_POD_NAME} -Djava.security.egd=file:/dev/./urandom" #-javaagent:/usr/local/tomcat/lib/jmx_prometheus_javaagent-0.12.0.jar=8088:/usr/local/tomcat/lib/prometheus-jmx-config.yaml" 
        - name: JAVA_AGENT_PORT
          value: "8088"
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        - name: health 
          containerPort: 8100
        livenessProbe:
          tcpSocket:
            port: 8100
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          tcpSocket:
            port: 8100
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 600Mi
          requests:
            cpu: 100m
            memory: 600Mi
        volumeMounts:
        - mountPath: "/usr/local/tomcat/webapps/test"
          name: tomcat-local-pv
        - mountPath: "/usr/local/tomcat/logs"
          name: tomcat-local-pv-logs
#        - mountPath: "/usr/local/tomcat/lib"
#          name: tomcat-local-pv-lib
        - mountPath: "/usr/local/tomcat/conf/server.xml"
          name: tomcat-server
          subPath: server.xml 
        - mountPath: "/usr/local/tomcat/conf/logging.properties"
          name: tomcat-logging
          subPath: logging.properties
        - mountPath: "/usr/local/tomcat/conf/context.xml"
          name: tomcat-context
          subPath: context.xml
