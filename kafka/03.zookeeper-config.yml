kind: ConfigMap
metadata:
  name: zookeeper-config
  namespace: kafka
apiVersion: v1
data:
  init.sh: |-
    #!/bin/bash
    set -e
    set -x
    [ ! -d /var/lib/zookeeper/data ] && mkdir -m 770 /var/lib/zookeeper/data && chgrp $(stat -c '%g' /var/lib/zookeeper) /var/lib/zookeeper/data
    [ -z "$ID_OFFSET" ] && ID_OFFSET=1
    export ZOOKEEPER_SERVER_ID=$((${HOSTNAME##*-} + $ID_OFFSET))
    echo "${ZOOKEEPER_SERVER_ID:-1}" | tee /var/lib/zookeeper/data/myid
    mkdir /etc/kafk -m 777
    cp -Lur /etc/kafka-configmap/* /etc/kafka/
    [ ! -z "$PZOO_REPLICAS" ] && [ ! -z "$REPLICAS" ] && {
      sed -i "s/^server\\./#server./" /etc/kafka/zookeeper.properties
      for N in $(seq $PZOO_REPLICAS); do echo "server.$N=pzoo-$(( $N - 1 )).pzoo.$POD_NAMESPACE.svc.cluster.local:2888:3888:participant" >> /etc/kafka/zookeeper.properties; done
      for N in $(seq $(( $REPLICAS - $PZOO_REPLICAS ))); do echo "server.$(( $PZOO_REPLICAS + $N ))=zoo-$(( $N - 1 )).zoo.$POD_NAMESPACE.svc.cluster.local:2888:3888:participant" >> /etc/kafka/zookeeper.properties; done
    }
    sed -i -e "s/=$POD_NAME.pzoo.kafka.svc.cluster.local/=0.0.0.0/g" "/etc/kafka/zookeeper.properties"
    sed -i -e "s/=$POD_NAME.zoo.kafka.svc.cluster.local/=0.0.0.0/g" "/etc/kafka/zookeeper.properties"
    ln -s /etc/kafka/zookeeper.properties /etc/kafka/zookeeper.properties.scale-5.$POD_NAME
    #ln -s /etc/kafka/zookeeper.properties /etc/kafka/zookeeper.properties.scale-$REPLICAS.$POD_NAME
  zookeeper.properties: |
    4lw.commands.whitelist=ruok
    tickTime=3000
    #zookeeper snapshot, log dir
    dataDir=/var/lib/zookeeper/data
    dataLogDir=/var/lib/zookeeper/data
    #zookeeper port
    clientPort=2181
    maxClientCnxns=60
    #client min max session time
    #minSessionTimeout=4000
    #maxSessionTimeout=40000
    initLimit=5
    syncLimit=2
    tcpKeepAlive=true
    electionPortBindRetry=0
    #add config
    autopurge.snapRetainCount=3
    autopurge.purgeInterval=1
    #quorumListenOnAllIPs=true
    #server list
    server.1=pzoo-0.pzoo.kafka.svc.cluster.local:2888:3888:participant
    #server.2=pzoo-1.pzoo.kafka.svc.cluster.local:2888:3888:participant
    #server.3=pzoo-2.pzoo.kafka.svc.cluster.local:2888:3888:participant
    #server.4=zoo-0.zoo.kafka.svc.cluster.local:2888:3888:participant
    #server.5=zoo-1.zoo.kafka.svc.cluster.local:2888:3888:participant
  log4j.properties: |-
    log4j.rootLogger=WARN, stdout
    log4j.appender.stdout=org.apache.log4j.ConsoleAppender
    log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
    log4j.appender.stdout.layout.ConversionPattern=[%d] %p %m (%c)%n
    # Suppress connection log messages, one line per readiness probe
    log4j.logger.org.apache.zookeeper.server.NIOServerCnxn=WARN
